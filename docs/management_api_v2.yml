swagger: '2.0'
info:
  version: '2'
  title: Device authentication
  description: |
      An API for device authentication handling.
      This API replaces fist version of the device authentiaction management API and device admission management API.
      First version of the device authentication management API and device admission management API are deprecated and will be removed with the next Mender release.
      You can still find information about first version of the device authentication service API at
      [https://docs.mender.io/1.6/apis/management-apis/device-authentication](https://docs.mender.io/1.6/apis/management-apis/device-authentication) and about device admission API at [https://docs.mender.io/1.6/apis/management-apis/device-admission](https://docs.mender.io/1.6/apis/management-apis/device-admission).
basePath: '/api/management/v2/devauth/'
host: 'mender-device-auth:8080'
schemes:
  - http

paths:
  /devices:
    get:
      summary: Get a list of tenant's devices.
      description: |
        Provides a list of tenant's devices, sorted by creation date, with optional device status filter.
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: status
          in: query
          description: |
            Device status filter. If not specified, all devices are listed.
          required: false
          type: string
          enum:
            - pending
            - accepted
            - rejected
            - preauthorized
        - name: page
          in: query
          description: Results page number
          required: false
          type: number
          format: integer
          default: 1
        - name: per_page
          in: query
          description: Number of results per page
          required: false
          type: number
          format: integer
          default: 20
          maximum: 500
      responses:
        200:
          description: An array of devices.
          schema:
            type: array
            items:
                $ref: '#/definitions/Device'
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Submit a preauthorized device.
      description: |
          Adds a given device/authentication data set in the 'preauthorized' state. The device identity data set must not yet exist in the DB (regardless of status).

          When the device requests authentication from deviceauth the next time, it will be issued a token without further user intervention.
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: pre_auth_request
          in: body
          description: Preauthentication request.
          required: true
          schema:
            $ref: "#/definitions/PreAuthSet"
      responses:
        201:
          description: Device submitted.
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Device already exists. Response contains conflicting device.
          schema:
            $ref: '#/definitions/Device'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /devices/{id}:
    get:
      summary: Get a particular device.
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: id
          in: path
          description: Device identifier
          required: true
          type: string
      responses:
        200:
          description: Device found.
          schema:
            $ref: '#/definitions/Device'
        404:
          description: Device not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Decommission device
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
      responses:
        204:
          description: Device decommissioned.
        404:
          description: Device not found
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /devices/{id}/auth/{aid}:
    delete:
      summary: Remove the device authentication set
      description: |
        Removes the device authentication set.
        Removing 'accepted' authentication set is equivalent
        to rejecting device and removing authentication set.
        If there is only one authentication set for the device
        and the device is 'preauthorized' then the device
        will also be deleted.
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: aid
          in: path
          description: Authentication data set identifier.
          required: true
          type: string
      responses:
        204:
          description: Device authentication set deleted.
        404:
          description: Device authentication set not found
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /devices/{id}/auth/{aid}/status:
    put:
      summary: Update the device authentication set status
      description: |
        Sets the status of a authentication data set of selected value.
        Valid state transitions:
        - 'pending' -> 'accepted'
        - 'pending' -> 'rejected'
        - 'rejected' -> 'accepted'
        - 'accepted' -> 'rejected'
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: aid
          in: path
          description: Authentication data set identifier.
          required: true
          type: string
        - name: status
          in: body
          description: New status.
          required: true
          schema:
            $ref: '#/definitions/Status'
      responses:
        204:
          description: The device authentication data set status was successfully updated.
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: The device was not found.
          schema:
            $ref: "#/definitions/Error"
        422:
          description: Request cannot be fulfilled e.g. due to exceeded limit on maximum accepted devices (see error message).
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
    get:
      summary: Get the device authentication set status
      description: |
        Returns the status of a particular device authentication data set.
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: id
          in: path
          description: Device identifier.
          required: true
          type: string
        - name: aid
          in: path
          description: Authentication data set identifier.
          required: true
          type: string
      responses:
        200:
          description: |
            successful response - the device's authentication set status is returned.
          schema:
            $ref: "#/definitions/Status"
          examples:
            application/json:
              status: "accepted"
        404:
          description: The device was not found.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /devices/count:
    get:
      summary: Get a count of devices, optionally filtered by status.
      description: |
        Provides a list of devices, optionally filtered by status.
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: Contains the JWT token issued by the User Administration and Authentication Service.
        - name: status
          in: query
          description: |
            Device status filter, one of 'pending', 'accepted', 'rejected'. Default is 'all devices'.
          required: false
          type: string
      responses:
        200:
          description: Device count.
          schema:
            $ref: '#/definitions/Count'
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tokens/{id}:
    delete:
      summary: Delete device token
      description: |
        Deletes the token, effectively revoking it. The device must
        apply for a new one with a new authentication request.
        The token 'id' corresponds to the standard 'jti' claim.
      parameters:
        - name: id
          in: path
          description: Unique token identifier('jti').
          required: true
          type: string
      responses:
        204:
          description: The token was successfully deleted.
        404:
          description: The token was not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

  /limits/max_devices:
    get:
      summary: Obtain limit of accepted devices.
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          format: Bearer [token]
          description: |
            Contains the JWT token issued by the User Administration and
            Authentication Service.
      responses:
        200:
          description: Usage statistics and limits.
          schema:
            $ref: '#/definitions/Limit'
        500:
          description: Internal server error.
          schema:
            $ref: '#/definitions/Error'

definitions:
  Status:
    description: Admission status of the device.
    type: object
    properties:
      status:
        type: string
        enum:
          - pending
          - accepted
          - rejected
    required:
      - status
    example:
      application/json:
          status: "accepted"
  Limit:
    description: Limit definition
    type: object
    properties:
      limit:
        type: integer
    required:
      - limit
    example:
      application/json:
        limit: 123
  Device:
    type: object
    properties:
      id:
        type: string
        description: Mender assigned Device ID.
      identity_data:
        $ref: "#/definitions/IdentityData"
      status:
        type: string
        enum:
          - pending
          - accepted
          - rejected
          - preauthorized
      created_ts:
        type: string
        format: datetime
        description: Created timestamp
      updated_ts:
        type: string
        format: datetime
        description: Updated timestamp
      auth_sets:
        type: array
        items:
          $ref: "#/definitions/AuthSet"
      decommissioning:
        type: boolean
        description: Devices that are part of ongoing decomissioning process will return True
  AuthSet:
    description: Authentication data set
    type: object
    properties:
      id:
        type: string
        description: Authentication data set ID.
      pubkey:
        type: string
        description: The device's public key, generated by the device or pre-provisioned by the vendor.
      identity_data:
        $ref: "#/definitions/IdentityData"
      status:
        type: string
        enum:
          - pending
          - accepted
          - rejected
          - preauthorized
      ts:
        type: string
        format: datetime
        description: Created timestamp
  Count:
    description: Counter type
    type: object
    properties:
      count:
        description: The count of requested items.
        type: integer
    example:
      count: "42"
  Error:
    description: Error descriptor
    type: object
    properties:
      error:
        description: Description of the error
        type: string
  PreAuthSet:
    type: object
    properties:
      identity_data:
        $ref: "#/definitions/IdentityData"
      pubkey:
        type: string
        description: The device's public key, generated by the device or pre-provisioned by the vendor.
    required:
      - identity_data
      - pubkey
    example:
      application/json:
        identity_data:
          application/json:
            mac: "00:01:02:03:04:05"
            sku: "My Device 1"
            sn:  "SN1234567890"
        pubkey: "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzogVU7RGDilbsoUt/DdH\nVJvcepl0A5+xzGQ50cq1VE/Dyyy8Zp0jzRXCnnu9nu395mAFSZGotZVr+sWEpO3c\nyC3VmXdBZmXmQdZqbdD/GuixJOYfqta2ytbIUPRXFN7/I7sgzxnXWBYXYmObYvdP\nokP0mQanY+WKxp7Q16pt1RoqoAd0kmV39g13rFl35muSHbSBoAW3GBF3gO+mF5Ty\n1ddp/XcgLOsmvNNjY+2HOD5F/RX0fs07mWnbD7x+xz7KEKjF+H7ZpkqCwmwCXaf0\niyYyh1852rti3Afw4mDxuVSD7sd9ggvYMc0QHIpQNkD4YWOhNiE1AB0zH57VbUYG\nUwIDAQAB\n-----END PUBLIC KEY-----\n"
  IdentityData:
    description: |
      Device identity attributes, in the form of a JSON structure.

      The attributes are completely vendor-specific, the provided ones are just an example.
      In reference implementation structure contains vendor-selected fields,
      such as MACs, serial numbers, etc.
    type: object
    properties:
      mac:
        description: MAC address.
        type: string
      sku:
        description: Stock keeping unit.
        type: string
      sn:
        description: Serial number.
        type: string
    example:
      application/json:
        mac: "00:01:02:03:04:05"
        sku: "My Device 1"
        sn:  "SN1234567890"
